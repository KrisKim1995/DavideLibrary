# Generated by Django 5.0.6 on 2024-07-21 12:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attendance_number', models.AutoField(primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('borrower_uid_number', models.CharField(max_length=20)),
                ('borrower_name', models.CharField(max_length=100)),
                ('grade_level', models.IntegerField(blank=True, null=True)),
                ('section', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookInventory',
            fields=[
                ('book_number', models.AutoField(primary_key=True, serialize=False)),
                ('record_date', models.DateTimeField(auto_now_add=True)),
                ('class_field', models.CharField(blank=True, max_length=100, null=True)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('book_title', models.CharField(max_length=200)),
                ('edition', models.CharField(blank=True, max_length=50, null=True)),
                ('volume', models.CharField(blank=True, max_length=50, null=True)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('fund_source', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('General Works', 'General Works'), ('Philosophy and Psychology', 'Philosophy and Psychology'), ('Religion', 'Religion'), ('Languages', 'Languages'), ('Natural Science', 'Natural Science')], max_length=100)),
                ('location', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Borrower',
            fields=[
                ('borrower_uid', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('borrower_name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('grade_level', models.CharField(max_length=100)),
                ('section', models.CharField(blank=True, max_length=100)),
                ('adviser', models.CharField(blank=True, max_length=100)),
                ('date_issued', models.DateTimeField()),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=128)),
                ('admin_id', models.CharField(max_length=255, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BorrowSlip',
            fields=[
                ('slip_number', models.AutoField(primary_key=True, serialize=False)),
                ('book_title', models.CharField(blank=True, max_length=200)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('category_number', models.IntegerField(blank=True, null=True)),
                ('date_borrow', models.DateTimeField()),
                ('borrower_uid_number', models.CharField(max_length=20)),
                ('borrower_name', models.CharField(blank=True, max_length=100)),
                ('due_date', models.DateTimeField()),
                ('librarian_name', models.CharField(max_length=100)),
                ('book_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.bookinventory')),
            ],
        ),
    ]
